[{"/Users/john/Documents/GitHub/netflixprime/src/reportWebVitals.js":"1","/Users/john/Documents/GitHub/netflixprime/src/components/smallcard/smallcard.js":"2","/Users/john/Documents/GitHub/netflixprime/src/components/bigcard/bigcard.js":"3","/Users/john/Documents/GitHub/netflixprime/src/App.js":"4","/Users/john/Documents/GitHub/netflixprime/src/index.js":"5","/Users/john/Documents/GitHub/netflixprime/src/components/searchbar/searchbar.js":"6"},{"size":362,"mtime":1609890379947,"results":"7","hashOfConfig":"8"},{"size":2892,"mtime":1610387616156,"results":"9","hashOfConfig":"8"},{"size":4143,"mtime":1611084356744,"results":"10","hashOfConfig":"8"},{"size":2349,"mtime":1611517605812,"results":"11","hashOfConfig":"8"},{"size":531,"mtime":1610067897617,"results":"12","hashOfConfig":"8"},{"size":826,"mtime":1611510067307,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1isrmbf",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/john/Documents/GitHub/netflixprime/src/reportWebVitals.js",[],"/Users/john/Documents/GitHub/netflixprime/src/components/smallcard/smallcard.js",["27","28"],"/Users/john/Documents/GitHub/netflixprime/src/components/bigcard/bigcard.js",["29","30"],"import { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport './bigcard.css'\n\nconst API_KEY = process.env.REACT_APP_TMDB_API_KEY\nconst baseURL = 'https://api.themoviedb.org/3'\nconst baseImageUrl = 'https://image.tmdb.org/t/p/original'\n\nconst latterURL = `?api_key=${API_KEY}&language=en-US&append_to_response=credits`\n\nfunction BigCard({ filmType, filmID, togglePopup }) {\n    const [filmData, setFilmData] = useState([])\n    const [directors, setDirectors] = useState([])\n    const [actors, setActors] = useState([])\n    const image = `${baseImageUrl}${filmData?.poster_path}`\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await axios.get(\n                `${baseURL}/${filmType}/${filmID}${latterURL}`,\n            )\n            console.log(response.data)\n            setFilmData(response.data)\n            setDirectors(\n                response.data.credits.crew.filter(\n                    (mem) => mem.job === 'Director',\n                ),\n            )\n            setActors(\n                response.data.credits.cast\n                    .filter((actor) => actor.popularity > 4)\n                    .slice(0, 5),\n            )\n            return response\n        }\n        fetchData()\n    }, [])\n\n    return (\n        <div\n            className='outerContainer'\n            style={{\n                backgroundImage: `url(${baseImageUrl}${filmData.backdrop_path})`,\n                backgroundPosition: 'center',\n                backgroundSize: 'cover',\n                backgroundRepeat: 'no-repeat',\n            }}>\n            <div className='wrapper'>\n                <div className='bigcard'>\n                    <div className='pictureSide'>\n                        <img\n                            className='cardImg'\n                            src={`${baseImageUrl}${filmData?.poster_path}`}\n                            alt={filmData.name}\n                        />\n                    </div>\n                    <div className='infoSide'>\n                        <div className='infoRow'>\n                            <span>{filmData.release_date?.slice(0, 4)} </span>\n                            <span>{filmData?.runtime} min </span>\n                        </div>\n                        <div className='titleRow'>\n                            {filmData?.original_title}\n                        </div>\n                        <div className='overviewRow'>\n                            <p id='greyText'>Plot</p>\n                            {filmData?.overview}\n                        </div>\n                        <div className='lastRow'>\n                            <div className='col1'>\n                                <p id='greyText'>Actors</p>\n                                {actors.map((actor) => (\n                                    <div key={actor.id} className='listItem'>\n                                        {actor.name}\n                                    </div>\n                                ))}\n                            </div>\n                            <div className='col2'>\n                                <p id='greyText'>Genres</p>\n                                {filmData.genres?.map((genre) => (\n                                    <div key={genre.id} className='listItem'>\n                                        {genre.name}\n                                    </div>\n                                ))}\n                                <p id='greyText'>Directors</p>\n                                {directors.map((director) => (\n                                    <div key={director.id} className='listItem'>\n                                        {director.name}\n                                    </div>\n                                ))}\n                            </div>\n                        </div>\n                    </div>\n                    <input\n                        type='button'\n                        value='x'\n                        id='close'\n                        onClick={togglePopup}\n                    />\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default BigCard\n","/Users/john/Documents/GitHub/netflixprime/src/App.js",[],"/Users/john/Documents/GitHub/netflixprime/src/index.js",[],"/Users/john/Documents/GitHub/netflixprime/src/components/searchbar/searchbar.js",[],{"ruleId":"31","severity":1,"message":"32","line":13,"column":12,"nodeType":"33","messageId":"34","endLine":13,"endColumn":19},{"ruleId":"35","severity":1,"message":"36","line":31,"column":8,"nodeType":"37","endLine":31,"endColumn":10,"suggestions":"38"},{"ruleId":"31","severity":1,"message":"39","line":15,"column":11,"nodeType":"33","messageId":"34","endLine":15,"endColumn":16},{"ruleId":"35","severity":1,"message":"40","line":37,"column":8,"nodeType":"37","endLine":37,"endColumn":10,"suggestions":"41"},"no-unused-vars","'isHover' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'film' and 'filmType'. Either include them or remove the dependency array.","ArrayExpression",["42"],"'image' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'filmID' and 'filmType'. Either include them or remove the dependency array.",["43"],{"desc":"44","fix":"45"},{"desc":"46","fix":"47"},"Update the dependencies array to be: [film, filmType]",{"range":"48","text":"49"},"Update the dependencies array to be: [filmID, filmType]",{"range":"50","text":"51"},[1034,1036],"[film, filmType]",[1259,1261],"[filmID, filmType]"]